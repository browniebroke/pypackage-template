name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Tests for the template
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: abatilo/actions-poetry@v2.1.0
    - name: Install Dependencies
      run: poetry install
    - name: Test with Pytest
      run: poetry run pytest

  # Lint tests and template hooks
  lint:
    strategy:
      fail-fast: false
      matrix:
        linter:
          - name: Flake8
            run: flake8 hooks tests
          - name: Black
            run: black --check hooks tests
          - name: PyUpgrade
            run: pyupgrade --py36-plus `find hooks tests -name "*.py"`
          - name: isort
            run: isort -c -v hooks tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: abatilo/actions-poetry@v2.1.0
    - name: Install Dependencies
      run: poetry install
    - name: ${{ matrix.linter.name }}
      run: poetry run ${{ matrix.linter.run }}

  # Generate project and build docs
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: abatilo/actions-poetry@v2.1.0
    - name: Install template dependecies
      run: poetry install
    - run: mkdir -p .cache/
    - name: Generate a project
      working-directory: .cache
      run: poetry run cookiecutter ../ --no-input --overwrite-if-exists project_name="My Package"
    - name: Install generated project deps
      working-directory: .cache/my-package
      run: poetry install -E docs
    - name: Build docs for generated project deps
      working-directory: .cache/my-package/docs
      run: poetry run make html

  # Generate project and run CI
  cookie:
    strategy:
      fail-fast: false
      matrix:
        script:
          - pytest
          - flake8
          - black --check .
          - pyupgrade --py36-plus `find . -name "*.py"`
          - isort -c -v .
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: abatilo/actions-poetry@v2.1.0
    - name: Install Template Dependencies
      run: poetry install

    - run: mkdir -p .cache/
    - name: Generate a project
      working-directory: .cache
      run: poetry run cookiecutter ../ --no-input --overwrite-if-exists project_name="My Package"
    - name: Install generated project deps
      working-directory: .cache/my-package
      run: poetry install
    - name: Run ${{ matrix.script }}
      working-directory: .cache/my-package
      run: poetry run ${{ matrix.script }}
