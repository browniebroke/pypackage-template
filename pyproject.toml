[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core>=1" ]

[tool.poetry]
name = "pypackage-template"
version = "0.1.0"
description = "A template for generating a Python package"
authors = [ "Bruno Alla <alla.brunoo@gmail.com>" ]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
copier = "^9.0.0"
pytest = "^8.0.0"
pytest-mock = "^3.3"

[tool.ruff]
target-version = "py39"
line-length = 88

lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # flake8-docstrings
  "E",   # pycodestyle
  "F",   # pyflake
  "I",   # isort
  "RUF", # ruff specific
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
lint.ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."project/tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]

[tool.pytest.ini_options]
addopts = "-v -Wdefault"
testpaths = "tests/"
